# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EackhDLQTbLjrMhNplGuNihx2OhQdL_i
"""

pip install -q -U google-generativeai

import pathlib
import textwrap

import google.generativeai as genai

from IPython.display import display
from IPython.display import Markdown

def to_markdown(text):
  text = text.replace('•', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

# Used to securely store your API key
from google.colab import userdata

from google.colab import userdata
userdata.get('KOYO')

# Or use `os.getenv('GOOGLE_API_KEY')` to fetch an environment variable.
GOOGLE_API_KEY=userdata.get('KOYO')
genai.configure(api_key=GOOGLE_API_KEY)

for m in genai.list_models():
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

model = genai.GenerativeModel('gemini-1.5-flash')

# Commented out IPython magic to ensure Python compatibility.
# %%time
# response = model.generate_content("What is the meaning of life?")

to_markdown(response.text)

response.prompt_feedback

response.candidates

# Commented out IPython magic to ensure Python compatibility.
# %%time
# response = model.generate_content("What is the meaning of life?", stream=True)

for chunk in response:
  print(chunk.text)
  print("_"*80)

response = model.generate_content("What is the meaning of life?", stream=True)

response.prompt_feedback

try:
  response.text
except Exception as e:
  print(f'{type(e).__name__}: {e}')

model = genai.GenerativeModel('gemini-1.5-flash')
chat = model.start_chat(history=[])
chat

response = chat.send_message("In one sentence, explain how a computer works to a young child.")
to_markdown(response.text)
chat.history

response = chat.send_message("你好")
for chunk in response:
  print(chunk.text)
  print("_"*80)